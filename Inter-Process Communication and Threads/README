/** @mainpage Two Players Find The Last Ball
 *  @author Marios Pafitis 
 *
 *  The goal of this project is to implement a simple game for becoming familiar with
 *  IPC (Inter-process Communication) and threads.
 *
 *  This is a game where two players are trying to find the last ball in an N * N board which is 
 *  being generated by a game server. The game server randomly places K balls in the N * N board 
 *  and stores the board in a shared memory. The two players are two different threads who use 
 *  semaphores in order to access the shared memory by turns. The two players are fully automated 
 *  and the make random decisions for the cell that they select. 
 *
 *  To run the game use the command make and then open two terminals. Run first the game server 
 *  with the command ./server and then the clients with the command ./client. The server is going 
 *  to create the board and the players are going to play until someone finds the last ball. You 
 *  can change the speed that the players play by changing the #define SLEEP to any integer in the 
 *  game.h file. By default is set to 0 so it sleeps for 0 seconds between each play of the player. 
 *  I recommend to use the value 1 to observe better the procedure. Also you can modify the size N 
 *  of the board and the number of balls K from the game.h file too. The #define SIZE represents 
 *  the one side of the board, and you can set it to any value from 2 and above. the #define BALLS 
 *  represents the number of balls in the game, so you can set it any value between 1 and the SIZE*SIZE. 
 *
 *  The output of the server represents the board which the characters 'x' represent an empty cell
 *  and the character 'o' a ball. When a player flips an empty cell the character is being replaced
 *  with the character '+'. When the player flips a cell that contains the ball it replaces the
 *  character with its turn number, '0' for Player 0, or '1' for player 1.
 *
 *  Enjoy the game

 *  @bug No known bugs
 *
*/

